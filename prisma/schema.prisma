generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  devices      Device[]
  Notification Notification[]

  @@map("users")
}

model Device {
  id       Int    @id @default(autoincrement())
  name     String
  platform String
  userId   Int

  user    User     @relation(fields: [userId], references: [id])
  session Session?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId])
  @@map("devices")
}

model Session {
  id           Int    @id @default(autoincrement())
  refreshToken String @unique @map("refresh_token")
  accessToken  String @unique @map("access_token")
  deviceId     Int    @unique @map("device_id")

  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sessions")
}

model Notification {
  id      Int      @id @default(autoincrement())
  title   String
  message String   @db.Text
  userId  Int
  read    Boolean  @default(false)
  sentAt  DateTime @default(now()) @map("sent_at")

  type NotificationType @default(GENERAL) @map("type")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("notifications")
}

enum NotificationType {
  GENERAL
  PRESS_RELEASE
}
